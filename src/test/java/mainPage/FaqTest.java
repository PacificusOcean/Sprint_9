package mainPage;

import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.assertTrue;
import java.util.Arrays;
public class FaqTest extends ScooterPage {


    public FaqTest() {
        super(null);
    }

    @Before
    public void setUp() {
        super.setUp(); // Вызов метода инициализации из родительского класса
    }

    @Test
    public void testFaqDropdown() {
        // Ожидаемые вопросы и ответы
        String[][] questionsAndAnswers = {
                {"Сколько это стоит? И как оплатить?", "Сутки — 400 рублей. Оплата курьеру — наличными или картой."},
                {"Хочу сразу несколько самокатов! Так можно?", "Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим."},
                {"Как рассчитывается время аренды?", "Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30."},
                {"Можно ли заказать самокат прямо на сегодня?", "Только начиная с завтрашнего дня. Но скоро станем расторопнее."},
                {"Можно ли продлить заказ или вернуть самокат раньше?", "Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010."},
                {"Вы привозите зарядку вместе с самокатом?", "Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без передышек и во сне. Зарядка не понадобится."},
                {"Можно ли отменить заказ?", "Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои."},
                {"Я жизу за МКАДом, привезёте?", "Да, обязательно. Всем самокатов! И Москве, и Московской области."}
        };

        // Используем Stream API для обработки вопросов и ответов
        Arrays.stream(questionsAndAnswers)
                .forEach(pair -> {
                    String question = pair[0];
                    String expectedAnswer = pair[1];
                    int index = Arrays.asList(questionsAndAnswers).indexOf(pair); // получаем индекс текущей пары

                    scooter.clickOnQuestion(index);
                    String answerText = scooter.getAnswerText(index);
                    assertTrue("Ответ для вопроса '" + question + "' должен быть: " + expectedAnswer, answerText.contains(expectedAnswer));
                });
    }
}
